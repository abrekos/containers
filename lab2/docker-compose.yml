services:
  postgres:
    image: "postgres:16-alpine"
    container_name: db
    ports:
      - "5432:5432"
    env_file: ./.env
    volumes:
      - ./volumes/postgres/:/var/lib/postgresql/data
    networks:
      - chat-app

  init_db:
    build:
      context: ../
      dockerfile: ./lab2/app/Dockerfile
    container_name: init_db
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_started
    env_file: ./.env
    entrypoint: npm run migrate
    restart: on-failure
    networks:
      - chat-app

  app:
    build:
      context: ../
      dockerfile: ./lab2/app/Dockerfile
    container_name: app
    ports:
      - "3000:3000"
    depends_on:
      init_db:
        condition: service_completed_successfully
    volumes:
      - ./.env:/var/www/app/src/.env
      - ./volumes/app/:/var/www/app/src/storage/
    healthcheck:
      test: curl --fail http://localhost:3000/healthcheck || exit 1
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 40s
      start_interval: 5s
    restart: always
    networks:
      - chat-app

networks:
  chat-app:
